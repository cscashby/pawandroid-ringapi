<html>
<body>
<bsh>source(server.props.get("serviceContext").pawHome + "/html/app/auth.bsh");</bsh>
<bsh>
dir = parameters.get("dir");
dirTreeSb = new StringBuffer();
if(dir !=null) {
	dir = URLDecoder.decode(dir, "UTF-8");
	// Set as variable so we know where we are
	fileTreeCurrentDir = dir;
	
	if (dir.charAt(dir.length()-1) == '\\') {
    	dir = dir.substring(0, dir.length()-1) + "/";
	} else if (dir.charAt(dir.length()-1) != '/') {
	    dir += "/";
	}
    if (new File(dir).exists()) {
		String[] files = new File(dir).list(new FilenameFilter() {
		    public boolean accept(File dir, String name) {
				return name.charAt(0) != '.';
		    }
		});
		Arrays.sort(files, String.CASE_INSENSITIVE_ORDER);
		dirTreeSb.append("<ul class=\"jqueryFileTree\" style=\"display: none;\">\n");
		// All dirs
		for (String file : files) {
		    if (new File(dir, file).isDirectory()) {
				dirTreeSb.append("<li class=\"directory collapsed\"><a href=\"#\" rel=\"" + dir + file + "/\">"
					+ file + "</a></li>\n");
		    }
		}
		// All files
		for (String file : files) {
		    if (!new File(dir, file).isDirectory()) {
				int dotIndex = file.lastIndexOf('.');
				String ext = dotIndex > 0 ? file.substring(dotIndex + 1) : "";
				dirTreeSb.append("<li class=\"file ext_" + ext + "\"><a href=\"#\" rel=\"" + dir + file + "\">"
					+ file + "</a></li>\n");
		    	}
		}
		dirTreeSb.append("</ul>\n");
    }
}

request.sendResponse(dirTreeSb.toString().getBytes(), "text/html");
request.out.flush();
request.out.close();
</bsh>
</body>
</html>

