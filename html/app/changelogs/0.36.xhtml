<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<title>Changelog 0.36</title>
<link rel="stylesheet" href="../css/default.css">
<script type="text/javascript" src="../js/jquery.js"></script>
<script type="text/javascript" src="../js/executeScript.js"></script>
</head>
<body>
<bsh>source(server.props.get("serviceContext").pawHome + "/html/app/auth.bsh");</bsh>
<h1>Changelog - Version 0.36</h1>

<h2>Web App</h2>
<ul>
  <li>
	Syntax colouring in BeanShell Console now hopefully should work in more browsers.
  </li>
</ul>
<p></p>

<h2>Android Functions</h2>
Checking for available Intents and speech to text support have been inplemented.<br>
The commands are:<br>
<p>
<tt>boolean istIntentAvailable(String intent)</tt><br>
<tt>String speechToText(String title)</tt>
</p>
<p></p>
Below are examples which demonstrate these commands. To test them yourself you can change the code inside the text fields.
<p></p>

<textarea cols="80" rows="10" id="speechToTextScript">
import android.speech.RecognizerIntent;

if(isIntentAvailable(RecognizerIntent.ACTION_RECOGNIZE_SPEECH)) {
  res = speechToText("Text to speech");
}
else {
  res = "SpeechToText not supported!";
}
$$.print(res);
</textarea><br>
Result:<br><textarea type="text" id="speechToTextScriptResult" cols="40" rows="1"></textarea><p></p>
<p></p>
<button onClick="executeScript('speechToTextScript', 'speechToTextScriptLoader', 'speechToTextScriptResult');">Execute Script</button>&nbsp;<img id="speechToTextScriptLoader" src="../images/loader.gif" style="display: none;" width="16">

<p></p>

</body>
</html>
